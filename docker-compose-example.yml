version: '2.1'
services:
  qwc-postgis:
    image: sourcepole/qwc-demo-db:latest
    # build:
    #   context: ./postgis
    #   args:
    #     - ALEMBIC_VERSION=c77774920e5b
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U postgres"]
      interval: 10s
    ports:
    # 5439 is the container-*external* port, the other
    # containers in this setup will reach this service
    # over the *internal* network on port 5432!
     - "127.0.0.1:5439:5432"

  qwc-qgis-server:
    image: sourcepole/qwc-qgis-server:3.16
    ports:
      - "127.0.0.1:8001:80"
    volumes:
      - ./volumes/qgs-resources:/data:ro
      - ./volumes/geodata:/geodata:ro
      - ./pg_service.conf:/etc/postgresql-common/pg_service.conf:ro

  qwc-config-service:
    image: sourcepole/qwc-config-generator:latest
    environment:
        - INPUT_CONFIG_PATH=/srv/qwc_service/config-in
        - OUTPUT_CONFIG_PATH=/srv/qwc_service/config-out
    ports:
      - "127.0.0.1:5010:9090"
    volumes:
      - ./volumes/config-in:/srv/qwc_service/config-in:ro
      - ./demo-config:/srv/qwc_service/config-out
      - ./volumes/qwc2:/qwc2
      - ./volumes/qgs-resources:/data
      - ./pg_service.conf:/var/www/.pg_service.conf:ro

  qwc-ogc-service:
    image: sourcepole/qwc-ogc-service:v2.0.0
    environment:
      - JWT_SECRET_KEY=$JWT_SECRET_KEY
      - JWT_COOKIE_CSRF_PROTECT=True
      - SERVICE_MOUNTPOINT=/ows
    volumes:
      - ./demo-config:/srv/qwc_service/config:ro
    ports:
      - "127.0.0.1:5013:9090"

  qwc-data-service:
    image: sourcepole/qwc-data-service:v2.0.3
    environment:
      - SERVICE_MOUNTPOINT=/api/v1/data
      - JWT_SECRET_KEY=$JWT_SECRET_KEY
      #- JWT_COOKIE_CSRF_PROTECT=True
    volumes:
      - ./pg_service-write.conf:/var/www/.pg_service.conf:ro
      - ./demo-config:/srv/qwc_service/config:ro
    ports:
      - "127.0.0.1:5012:9090"

  qwc-solr:
    image: solr:8.4.1
    entrypoint:
      - docker-entrypoint.sh
      - solr-precreate
      - gdi
      - /gdi_conf
    ports:
     - "127.0.0.1:8983:8983"
    volumes:
      - ./volumes/solr/configsets/gdi:/gdi_conf:ro
      # Configuration is copied once from /gdi_conf/ to /var/solr/data/
      # Change ownership to solr user with `sudo chown 8983:8983 volumes/solr/data`
      - ./volumes/solr/data:/var/solr/data
      # Protect admin GUI and admin API with Basic auth
      # Change "#credentials" to "credentials" in security.json for adding a user 'solr' with password 'SolrRocks'
      #- ./volumes/solr/security.json:/var/solr/data/security.json:ro

  qwc-fulltext-search-service:
    image: sourcepole/qwc-fulltext-search-service:v2.1.0
    environment:
      - SERVICE_MOUNTPOINT=/api/v2/search
      - JWT_SECRET_KEY=$JWT_SECRET_KEY
      - JWT_COOKIE_CSRF_PROTECT=True
    ports:
      - "127.0.0.1:5011:9090"
    volumes:
      - ./pg_service.conf:/var/www/.pg_service.conf:ro
      - ./demo-config:/srv/qwc_service/config:ro

  qwc-map-viewer:
    image: sourcepole/qwc-map-viewer-demo:v2.0.1
    # With custom build added via volume:
    # image: sourcepole/qwc-map-viewer-base:v2.0.1
    environment:
      - JWT_SECRET_KEY=$JWT_SECRET_KEY
      - JWT_COOKIE_CSRF_PROTECT=True
    ports:
      - "127.0.0.1:5030:9090"
    volumes:
      - ./demo-config:/srv/qwc_service/config:ro
      # When using own viewer build with qwc-map-viewer-base:
      #- ./volumes/qwc2:/qwc2:ro
      # Required for generated edit forms:
      - ./volumes/qwc2/assets/forms:/qwc2/assets/forms:ro

  qwc-admin-gui:
    image: sourcepole/qwc-admin-gui:v2.0.2
    environment:
      - JWT_SECRET_KEY=$JWT_SECRET_KEY
      # Disable CSRF cookie check for now - breaks POST requests
      #- JWT_COOKIE_CSRF_PROTECT=True
      - 'USER_INFO_FIELDS=[{"title": "Surname", "name": "surname", "type": "text", "required": true}, {"title": "First name", "name": "first_name", "type": "text", "required": true}, {"title": "Street", "name": "street", "type": "text"}, {"title": "ZIP", "name": "zip", "type": "text"}, {"title": "City", "name": "city", "type": "text"}
]'
      #- TOTP_ENABLED=False
      #- GROUP_REGISTRATION_ENABLED=False
      - DEFAULT_LOCALE=en
      - MAIL_SUPPRESS_SEND=True
      - MAIL_DEFAULT_SENDER=from@example.com
    ports:
      - "127.0.0.1:5031:9090"
    volumes:
      - ./pg_service.conf:/var/www/.pg_service.conf:ro
      - ./demo-config:/srv/qwc_service/config:ro

  # qwc-registration-gui:
  #   image: sourcepole/qwc-registration-gui
  #   environment:
  #     - SERVICE_MOUNTPOINT=/registration
  #     - JWT_SECRET_KEY=$JWT_SECRET_KEY
  #     - JWT_COOKIE_CSRF_PROTECT=True
  #     - DEFAULT_LOCALE=en
  #     - ADMIN_RECIPIENTS=admin@example.com
  #     - MAIL_SUPPRESS_SEND=True
  #     - MAIL_DEFAULT_SENDER=from@example.com
  #   ports:
  #     - "127.0.0.1:5032:9090"
  #   volumes:
  #     - ./pg_service.conf:/var/www/.pg_service.conf:ro

  qwc-auth-service:
    image: sourcepole/qwc-db-auth:v2.1.4
    environment:
      - SERVICE_MOUNTPOINT=/auth
      - JWT_SECRET_KEY=$JWT_SECRET_KEY
      - JWT_COOKIE_CSRF_PROTECT=True
      # https://flask-jwt-extended.readthedocs.io/en/stable/options/#cookie-options
      - JWT_COOKIE_SAMESITE=Strict
      # Enable the following in production (requires https):
      #- JWT_COOKIE_SECURE=True
      #- TOTP_ENABLED=False
      #- TOTP_ISSUER_NAME=QWC Services
      - MAIL_SUPPRESS_SEND=True
      - MAIL_DEFAULT_SENDER=from@example.com
    volumes:
      - ./pg_service.conf:/var/www/.pg_service.conf:ro
      - ./demo-config:/srv/qwc_service/config:ro
    ports:
      - "127.0.0.1:5017:9090"

  qwc-elevation-service:
    image: sourcepole/qwc-elevation-service:v2.0.0
    volumes:
      - ./demo-config:/srv/qwc_service/config:ro
    ports:
      - "127.0.0.1:5002:9090"

  qwc-permalink-service:
    image: sourcepole/qwc-permalink-service:v2.0.0
    environment:
      - SERVICE_MOUNTPOINT=/api/v1/permalink
      - JWT_SECRET_KEY=$JWT_SECRET_KEY
      - JWT_COOKIE_CSRF_PROTECT=True
    volumes:
      - ./pg_service.conf:/var/www/.pg_service.conf:ro
      - ./demo-config:/srv/qwc_service/config:ro
    ports:
      - "127.0.0.1:5001:9090"

  # qwc-feature-info-service:
  #   image: sourcepole/qwc-feature-info-service:v2.0.0
  #   environment:
  #     - SERVICE_MOUNTPOINT=/api/v1/feature-info
  #     - JWT_SECRET_KEY=$JWT_SECRET_KEY
  #     - JWT_COOKIE_CSRF_PROTECT=True
  #   volumes:
  #     - ./pg_service.conf:/var/www/.pg_service.conf:ro
  #     - ./demo-config:/srv/qwc_service/config:ro
  #   ports:
  #     - "127.0.0.1:5015:9090"

  qwc-document-service:
    image: sourcepole/qwc-document-service:v2.0.0
    environment:
      - SERVICE_MOUNTPOINT=/api/v1/document
      - JWT_SECRET_KEY=$JWT_SECRET_KEY
      - JWT_COOKIE_CSRF_PROTECT=True
    volumes:
      - ./demo-config:/srv/qwc_service/config:ro
    depends_on:
      - jasper-reporting-service
    ports:
      - "127.0.0.1:5018:9090"

  jasper-reporting-service:
    image: sourcepole/jasper-reporting-service:0.8.0
    volumes:
      - ./volumes/jasper-reports/config:/srv/jasper-reporting-service/config:ro
      - ./volumes/jasper-reports/demo:/srv/jasper-reporting-service/demo:ro
    ports:
      - "127.0.0.1:8002:8080"

  qwc-mapinfo-service:
    image: sourcepole/qwc-mapinfo-service:v2.0.0
    environment:
      - SERVICE_MOUNTPOINT=/api/v1/mapinfo
      - JWT_SECRET_KEY=$JWT_SECRET_KEY
      - JWT_COOKIE_CSRF_PROTECT=True
    volumes:
      - ./pg_service.conf:/var/www/.pg_service.conf:ro
      - ./demo-config:/srv/qwc_service/config:ro
    depends_on:
      - qwc-postgis
    ports:
      - "127.0.0.1:5016:9090"

  # qwc-legend-service:
  #   image: sourcepole/qwc-legend-service:v2.0.0
  #   environment:
  #     - SERVICE_MOUNTPOINT=/api/v1/legend
  #     - JWT_SECRET_KEY=$JWT_SECRET_KEY
  #     - JWT_COOKIE_CSRF_PROTECT=True
  #   volumes:
  #     - ./demo-config:/srv/qwc_service/config:ro
  #     - ./volumes/legends:/legends
  #   depends_on:
  #     - qwc-qgis-server
  #   ports:
  #     - "127.0.0.1:5014:9090"

  qwc-api-gateway:
    image: nginx:1.19
    ports:
      - "8088:80"
    volumes:
      - ./api-gateway/nginx.conf:/etc/nginx/conf.d/default.conf:ro
    depends_on:
      - qwc-map-viewer
      - qwc-auth-service
      #- qwc-feature-info-service
      #- qwc-legend-service
      - qwc-mapinfo-service
      - qwc-permalink-service
      - qwc-elevation-service
      - qwc-fulltext-search-service
      - qwc-data-service
      - qwc-admin-gui
      #- qwc-registration-gui
